#! /bin/bash
set -Eeuo pipefail

ROOT="$(dirname "${0}")"

source "${ROOT}"/globals

# Build TTF files using Iosevka
build_iosevka() {
  if [[ "${IOSEVKA}" = "HEAD" ]]; then
    git clone --depth 1 https://github.com/be5invis/Iosevka.git iosevka
  else
    git clone --depth 1 --branch "${IOSEVKA}" https://github.com/be5invis/Iosevka.git iosevka
  fi
  pushd iosevka > /dev/null
  cp "${ROOT}"/src/jambo-mono_complete.toml private-build-plans.toml
  git apply "${ROOT}"/src/4-yBar_tweak.patch
  npm install
  npm run build -- contents::"${VARIANT}"
  popd > /dev/null
}

# Apply Nerd Fonts patches to TTF files to create *-nerd veriants.
patch_nerd_fonts() {
  mkdir -p font-patcher
  pushd font-patcher > /dev/null
  if [[ "${NERDFONT}" = "latest" ]]; then
    wget https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FontPatcher.zip
  else
    wget https://github.com/ryanoasis/nerd-fonts/releases/download/"${NERDFONT}"/FontPatcher.zip
  fi
  unzip FontPatcher.zip
  N="$(nproc)"
  I=0
  for DIR in ../iosevka/dist/"${VARIANT}"/{TTF,TTF-Unhinted}; do
    mkdir -p "${DIR}-Nerd"
    for FONT in "${DIR}"/*.ttf; do
      show_info "Patching ${FONT@Q}..."
      fontforge -script font-patcher "${FONT}" -out "${DIR}-Nerd" --careful -c -l -q > /dev/null 2>&1 &
      I=$((I + 1))
      if [ $((I % N)) -eq 0 ]; then
        I=0
        wait
      fi
    done
    wait
  done
  popd > /dev/null
}

# Re-arrange and rename files.
rename_ttf() {
  for DIR in iosevka/dist/"${VARIANT}"/{TTF,TTF-Unhinted,WOFF2,WOFF2-Unhinted}; do
    pushd "${DIR}" > /dev/null
    for FILE in *; do
      NEWFILE="$(echo "${FILE}" |
                tr '[:upper:]' '[:lower:]' |
                sed -e "s/-normal/-/g" -e "s/-\./-regular./g")"
      if [ -n "${NEWFILE}" ]; then
        mv "${FILE}" "${NEWFILE}"
      fi
    done
    popd > /dev/null
  done
  for DIR in iosevka/dist/"${VARIANT}"/{TTF-Nerd,TTF-Unhinted-Nerd}; do
    pushd "${DIR}" > /dev/null
    for FILE in *Nerd*; do
      NEWFILE="$(echo "${FILE}" |
                tr '[:upper:]' '[:lower:]' |
                sed -e "s/jambo mono/jambo-mono-nerd/g" \
                    -e "s/\ nerd font complete//g" \
                    -e "s/nerd /nerd-/g" \
                    -e "s/jambomononerdfont/jambo-mono-nerd/g" \
                    -e "s/ //g")"
      if [ -n "${NEWFILE}" ]; then
        mv "${FILE}" "${NEWFILE}"
      fi
    done
    popd > /dev/null
  done
}

! check_command git npm ttfautohint fontforge wget && exit 3

ROOT="$(readlink -f "$(dirname "${0}")")"
DEST="${ROOT}"/dest
IOSEVKA=v28.0.0-alpha.2
NERDFONT=v3.1.0
# IOSEVKA=HEAD
# NERDFONT=latest
BUILD=$(mktemp -d)
VARIANT=jambo-mono # alternative: jambo-mono-tall

trap 'rm -rf "${BUILD}"; exit' EXIT INT TERM

pushd "${BUILD}" > /dev/null

build_iosevka
patch_nerd_fonts
rename_ttf

# Move final files to "${DEST}" directory.
mv iosevka/dist/"${VARIANT}" "${DEST}"
sync

popd > /dev/null
